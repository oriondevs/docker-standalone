services:
  web:
    image: nginx:latest
    env_file: .env
    ports:
      - "${LHC_PUBLIC_PORT}:80"
    volumes:
      - ./livehelperchat/lhc_web:/code
      - ./conf/nginx/site-nodejs.conf:/etc/nginx/conf.d/default.conf
      - ./conf/nginx/mime.types:/etc/nginx/mime.types
      - ./conf/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - db
      - php
      - php-cronjob
    networks:
      - code-network
    restart: always
  php:
    build: ./Dockerfiles/php
    image: remdex/livehelperchat-php:latest
    env_file: .env
    volumes:
      - ./livehelperchat/lhc_web:/code
      - ./lhc-php-resque/lhcphpresque:/code/extension/lhcphpresque
      - ./NodeJS-Helper/nodejshelper:/code/extension/nodejshelper
      - ./conf/scripts:/scripts
      - ./conf/php-fpm/zz-lhc.conf:/usr/local/etc/php-fpm.d/zz-lhc.conf
    networks:
      - code-network
    restart: always
  cobrowse:
    build: ./Dockerfiles/cobrowse
    image: remdex/livehelperchat-cobrowse:latest
    ports:
      - 127.0.0.1:31130:31130
    networks:
      - code-network
    restart: always
  php-cronjob:
    build: ./Dockerfiles/cronjob
    image: remdex/livehelperchat-php-cronjob:latest
    env_file: .env
    volumes:
      - ./livehelperchat/lhc_web:/code
      - ./lhc-php-resque/lhcphpresque:/code/extension/lhcphpresque
      - ./NodeJS-Helper/nodejshelper:/code/extension/nodejshelper
      - ./conf/scripts:/scripts
    networks:
      - code-network
    restart: always
  php-resque:
    build: ./Dockerfiles/php-resque
    image: remdex/livehelperchat-php-resque:latest
    env_file: .env
    volumes:
      - ./livehelperchat/lhc_web:/code
      - ./lhc-php-resque/lhcphpresque:/code/extension/lhcphpresque
      - ./NodeJS-Helper/nodejshelper:/code/extension/nodejshelper
      - ./conf/scripts:/scripts
    networks:
      - code-network
    depends_on:
      - db
      - redis
    restart: always
  nodejshelper:
    build: ./Dockerfiles/nodejshelper
    image: remdex/livehelperchat-nodejshelper:latest
    env_file: .env
    depends_on:
      - redis
    networks:
      - code-network
    restart: always
  redis:
    image: "redis:alpine"
    networks:
      - code-network
    restart: always
  db:
    image: mariadb
    env_file: .env
    environment:
      TZ: UTC
    volumes:
      - ./dbdata:/var/lib/mysql
    ports:
      - 127.0.0.1:3307:3306
    networks:
      - code-network
    restart: always
  
  chatbot:
    build:
      context: chatbot
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file: ./chatbot/.env
    # environment:
    #   - MONGO_HOST=mongodb
    #   - MONGO_PORT=27017
    #   - MONGO_DB=cnj-chatbot
    #   - JITSI_DOMAIN=localhost:8443
    #   - JITSI_API_KEY=dev_key
    #   - REDIS_HOST=redis
    #   - REDIS_PORT=6379
    depends_on:
      - mongodb
      # - jitsi
      - redis
    networks:
      - code-network
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - code-network
  # jitsi:
  #   image: jitsi/web:web-1.0.8588-1
  #   ports:
  #     - "8443:443"
  #     - "10000:10000/udp"
  #   environment:
  #     - ENABLE_AUTH=0
  #     - ENABLE_GUESTS=1
  #     - ENABLE_LETSENCRYPT=0
  #     - ENABLE_TRANSCRIPTION=0
  #     - ENABLE_RECORDING=0
  #     - PUBLIC_URL=https://localhost:8443
  #   volumes:
  #     - jitsi_config:/config:Z
  #     - jitsi_prosody:/prosody/config:Z
  #     - jitsi_jvb:/jvb:Z
  #     - jitsi_jicofo:/jicofo:Z
  #   networks:
      # - code-network

networks:
  code-network:
    driver: bridge

volumes:
  mongodb_data:
